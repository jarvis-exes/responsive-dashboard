import { createSlice } from "@reduxjs/toolkit";

// Initial state for the payout slice
const initialState = {
  payouts: [],
  totalPayout: 0,
};

// Create the slice
const payoutSlice = createSlice({
  name: "payout",
  initialState,
  reducers: {
    setPayouts: (state, action) => {
      state.payouts = action.payload;
    },
    updatePayoutRate: (state, action) => {
      const { author, newRate } = action.payload;
      const updatedPayouts = state.payouts.map((item) =>
        item.author === author ? { ...item, rate: newRate } : item
      );
      state.payouts = updatedPayouts;
      // Recalculate the total payout
      state.totalPayout = updatedPayouts.reduce(
        (total, item) => total + item.articles * item.rate,
        0
      );
    },
    setTotalPayout: (state, action) => {
      state.totalPayout = action.payload;
    },
  },
});

// Export the actions generated by the slice
export const { setPayouts, updatePayoutRate, setTotalPayout } =
  payoutSlice.actions;

// Export the reducer to be added to the store
export default payoutSlice.reducer;
